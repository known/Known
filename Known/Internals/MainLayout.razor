@inherits BaseComponent

<KLayout @ref="layout" IsAdmin OnLoadMenus="OnLoadMenus" OnReloadPage="OnReloadPage">
    @if (Context.UserSetting.LayoutMode == LayoutMode.Horizontal.ToString())
    {
        <Layout Class="@LayoutClass">
            <Header Class="@HeaderClass">
                <div class="left">
                    <div class="kui-logo" @onclick="e=>OnLogoClick()"></div>
                    <MainMenu @ref="menu" Mode="MenuMode.Horizontal" Items="layout?.UserMenus" />
                </div>
                <TopNavbar OnSetting="OnSetting" />
            </Header>
            <Content>
                <MainBody @ref="body" ChildContent="ChildContent" />
            </Content>
            <MainFooter />
        </Layout>
    }
    else
    {
        <Layout Class="@LayoutClass">
            @if (Context.UserSetting.LayoutMode == LayoutMode.Float.ToString())
            {
                <Sider Theme="Context.UserSetting.ToSiderTheme()" Class="@MenuClass" CollapsedWidth="60" Collapsed NoTrigger>
                    <div class="kui-logo" @onclick="e=>OnLogoClick()"></div>
                    <div class="kui-scroll">
                        <MainMenu @ref="menu" Mode="MenuMode.Inline" Items="layout?.UserMenus" />
                    </div>
                </Sider>
            }
            else
            {
                <Sider Theme="Context.UserSetting.ToSiderTheme()" Class="@MenuClass" @bind-Collapsed="collapsed" CollapsedWidth="60" Collapsible NoTrigger>
                    <div class="kui-logo" @onclick="e=>OnLogoClick()"></div>
                    <div class="kui-scroll">
                        <MainMenu @ref="menu" Mode="MenuMode.Inline" Items="layout?.UserMenus" />
                    </div>
                </Sider>
            }
            <Layout>
                <Header Class="kui-header">
                    <div class="left">
                        @if (Context.UserSetting.LayoutMode != LayoutMode.Float.ToString())
                        {
                            <NavToggle OnToggle="OnToggle" />
                        }
                        <NavRefresh />
                        <TopBreadcrumb Current="Context.Current" />
                    </div>
                    <TopNavbar OnSetting="OnSetting" />
                </Header>
                <Content>
                    <MainBody @ref="body" ChildContent="ChildContent" />
                </Content>
                <MainFooter />
            </Layout>
        </Layout>
    }
</KLayout>

@code {
    private bool collapsed = false;

    private KLayout layout;
    private MainMenu menu;
    private MainBody body;

    private string LayoutClass => CssBuilder.Default("kui-layout").AddClass(Context.UserSetting.Size).BuildClass();
    private string HeaderClass => CssBuilder.Default("kui-header")
                                            .AddClass("kui-menu-dark", Context.UserSetting.MenuTheme == "Dark")
                                            .BuildClass();
    private string MenuClass => CssBuilder.Default()
                                          .AddClass("kui-menu-dark", Context.UserSetting.MenuTheme == "Dark")
                                          .AddClass("kui-menu-float", Context.UserSetting.LayoutMode == LayoutMode.Float.ToString())
                                          .BuildClass();

    /// <summary>
    /// 取得或设置子组件内容。
    /// </summary>
    [Parameter] public RenderFragment ChildContent { get; set; }

    private void OnLoadMenus(List<MenuInfo> menus)
    {
        menu?.SetItems(menus);
    }

    private void OnReloadPage()
    {
        body?.ReloadPage();
    }

    private void OnToggle(bool collapsed)
    {
        this.collapsed = collapsed;
        StateChanged();
    }

    private void OnLogoClick()
    {
        Navigation.NavigateTo("/");
    }

    private void OnSetting()
    {
        layout?.ShowSetting();
    }
}