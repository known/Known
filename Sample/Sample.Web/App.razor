<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="keywords" content="blazor,known,razor,react,vue,组件,dotnet">
    <meta name="description" content="Known是基于Blazor的企业级快速开发框架，低代码，跨平台，开箱即用，一处代码，多处运行。" />
    <base href="/" />
    <title>@AppConfig.AppName</title>
    <KStyleSheet />
    <link rel="stylesheet" href="@Config.GetStaticFileUrl("css/app.css")" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <link rel="manifest" href="manifest.json" />
    <link rel="apple-touch-icon" sizes="512x512" href="icon-512.png" />
    <link rel="apple-touch-icon" sizes="192x192" href="icon-192.png" />
</head>
<body>
    <div class="loading"></div>
    <Routes @rendermode="InteractiveMode" Context="Context" />
    <KScript />
    <script src="_framework/blazor.web.js"></script>
    <script>navigator.serviceWorker.register('service-worker.js');</script>
</body>
</html>

@code {
    [Inject] private UIContext Context { get; set; }
    [CascadingParameter] private HttpContext HttpContext { get; set; }
    //private InteractiveAutoRenderMode InteractiveMode => new(false);
    //private InteractiveServerRenderMode InteractiveMode => new(false);
    private InteractiveServerRenderMode InteractiveMode => HttpContext.Request.Path.StartsWithSegments("/login1") ? null : new(false);

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Context.IPAddress = HttpContext.Connection?.RemoteIpAddress?.ToString();
        Context.IsMobile = HttpContext.CheckMobile();
        Config.HostUrl = HttpContext.GetHostUrl();
    }
}